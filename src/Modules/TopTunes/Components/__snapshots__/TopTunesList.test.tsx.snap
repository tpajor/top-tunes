// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component should match snapshot if no change was intended 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TopTunesList
    byIds={
      Object {
        "0": Object {
          "artist": "Various",
          "category": "Jazz",
          "link": "http://profile-url.com",
          "name": "Some Album",
          "numberOfSongs": 14,
          "photo": "http://photo-url.com",
          "price": "$6.67",
          "releaseDate": 1902-03-01T23:00:00.000Z,
          "rights": "copyleft",
          "title": "Various - Some Album",
        },
        "1": Object {
          "artist": "Artist Name",
          "category": "Rock",
          "link": "http://profile-url-1.com",
          "name": "Some Other Album",
          "numberOfSongs": 8,
          "photo": "http://photo-url-1.com",
          "price": "$13.13",
          "releaseDate": 1904-05-03T22:00:00.000Z,
          "rights": "copyleft rights",
          "title": "Artist Name - Some Other Album",
        },
        "2": Object {
          "artist": "Lazy Artist Name",
          "category": "Pop",
          "link": "http://profile-url-2.com",
          "name": "Yet Another Album",
          "numberOfSongs": 11,
          "photo": "http://photo-url-2.com",
          "price": "$1.09",
          "releaseDate": 1908-09-07T22:00:00.000Z,
          "rights": "copyleft rights reversed",
          "title": "Lazy Artist Name - Yet Another Album",
        },
      }
    }
    error=""
    filteredIds={
      Array [
        0,
        1,
        2,
      ]
    }
    filteriTunes={[MockFunction]}
    getiTunesStart={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    isLoading={false}
    location="location"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Route
          component={[Function]}
          path="/topTunes/:id"
        />,
        <div
          className="container"
        >
          <Quicksearch
            term$={
              Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [
                  DebounceTimeSubscriber {
                    "_parent": Subscriber {
                      "_parent": null,
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        [Circular],
                      ],
                      "closed": false,
                      "destination": SafeSubscriber {
                        "_complete": undefined,
                        "_context": [Circular],
                        "_error": undefined,
                        "_next": [Function],
                        "_parent": null,
                        "_parentSubscriber": [Circular],
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "destination": Object {
                          "closed": true,
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "isStopped": false,
                        "syncErrorThrowable": false,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "isStopped": false,
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "_parentSubscription": null,
                    "_parents": null,
                    "_subscriptions": Array [
                      SubjectSubscription {
                        "_parent": [Circular],
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "subject": [Circular],
                        "subscriber": [Circular],
                      },
                    ],
                    "closed": false,
                    "debouncedSubscription": null,
                    "destination": Subscriber {
                      "_parent": null,
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        [Circular],
                      ],
                      "closed": false,
                      "destination": SafeSubscriber {
                        "_complete": undefined,
                        "_context": [Circular],
                        "_error": undefined,
                        "_next": [Function],
                        "_parent": null,
                        "_parentSubscriber": [Circular],
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "destination": Object {
                          "closed": true,
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "isStopped": false,
                        "syncErrorThrowable": false,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "isStopped": false,
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "dueTime": 500,
                    "hasValue": false,
                    "isStopped": false,
                    "lastValue": null,
                    "scheduler": AsyncScheduler {
                      "SchedulerAction": [Function],
                      "actions": Array [],
                      "active": false,
                      "now": [Function],
                      "scheduled": undefined,
                    },
                    "syncErrorThrowable": true,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                ],
                "thrownError": null,
              }
            }
          />
        </div>,
        Array [
          <TopTunesListItem
            item={
              Object {
                "artist": "Various",
                "category": "Jazz",
                "link": "http://profile-url.com",
                "name": "Some Album",
                "numberOfSongs": 14,
                "photo": "http://photo-url.com",
                "price": "$6.67",
                "releaseDate": 1902-03-01T23:00:00.000Z,
                "rights": "copyleft",
                "title": "Various - Some Album",
              }
            }
            iteration={0}
            position={0}
          />,
          <TopTunesListItem
            item={
              Object {
                "artist": "Artist Name",
                "category": "Rock",
                "link": "http://profile-url-1.com",
                "name": "Some Other Album",
                "numberOfSongs": 8,
                "photo": "http://photo-url-1.com",
                "price": "$13.13",
                "releaseDate": 1904-05-03T22:00:00.000Z,
                "rights": "copyleft rights",
                "title": "Artist Name - Some Other Album",
              }
            }
            iteration={1}
            position={1}
          />,
          <TopTunesListItem
            item={
              Object {
                "artist": "Lazy Artist Name",
                "category": "Pop",
                "link": "http://profile-url-2.com",
                "name": "Yet Another Album",
                "numberOfSongs": 11,
                "photo": "http://photo-url-2.com",
                "price": "$1.09",
                "releaseDate": 1908-09-07T22:00:00.000Z,
                "rights": "copyleft rights reversed",
                "title": "Lazy Artist Name - Yet Another Album",
              }
            }
            iteration={2}
            position={2}
          />,
        ],
      ],
      "className": "container container--list",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "/topTunes/:id",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Quicksearch
            term$={
              Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [
                  DebounceTimeSubscriber {
                    "_parent": Subscriber {
                      "_parent": null,
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        [Circular],
                      ],
                      "closed": false,
                      "destination": SafeSubscriber {
                        "_complete": undefined,
                        "_context": [Circular],
                        "_error": undefined,
                        "_next": [Function],
                        "_parent": null,
                        "_parentSubscriber": [Circular],
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "destination": Object {
                          "closed": true,
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "isStopped": false,
                        "syncErrorThrowable": false,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "isStopped": false,
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "_parentSubscription": null,
                    "_parents": null,
                    "_subscriptions": Array [
                      SubjectSubscription {
                        "_parent": [Circular],
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "subject": [Circular],
                        "subscriber": [Circular],
                      },
                    ],
                    "closed": false,
                    "debouncedSubscription": null,
                    "destination": Subscriber {
                      "_parent": null,
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        [Circular],
                      ],
                      "closed": false,
                      "destination": SafeSubscriber {
                        "_complete": undefined,
                        "_context": [Circular],
                        "_error": undefined,
                        "_next": [Function],
                        "_parent": null,
                        "_parentSubscriber": [Circular],
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "destination": Object {
                          "closed": true,
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "isStopped": false,
                        "syncErrorThrowable": false,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "isStopped": false,
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "dueTime": 500,
                    "hasValue": false,
                    "isStopped": false,
                    "lastValue": null,
                    "scheduler": AsyncScheduler {
                      "SchedulerAction": [Function],
                      "actions": Array [],
                      "active": false,
                      "now": [Function],
                      "scheduled": undefined,
                    },
                    "syncErrorThrowable": true,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                ],
                "thrownError": null,
              }
            }
          />,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "term$": Subject {
              "_isScalar": false,
              "closed": false,
              "hasError": false,
              "isStopped": false,
              "observers": Array [
                DebounceTimeSubscriber {
                  "_parent": Subscriber {
                    "_parent": null,
                    "_parentSubscription": null,
                    "_parents": null,
                    "_subscriptions": Array [
                      [Circular],
                    ],
                    "closed": false,
                    "destination": SafeSubscriber {
                      "_complete": undefined,
                      "_context": [Circular],
                      "_error": undefined,
                      "_next": [Function],
                      "_parent": null,
                      "_parentSubscriber": [Circular],
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": null,
                      "closed": false,
                      "destination": Object {
                        "closed": true,
                        "complete": [Function],
                        "error": [Function],
                        "next": [Function],
                      },
                      "isStopped": false,
                      "syncErrorThrowable": false,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "isStopped": false,
                    "syncErrorThrowable": true,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "_parentSubscription": null,
                  "_parents": null,
                  "_subscriptions": Array [
                    SubjectSubscription {
                      "_parent": [Circular],
                      "_parents": null,
                      "_subscriptions": null,
                      "closed": false,
                      "subject": [Circular],
                      "subscriber": [Circular],
                    },
                  ],
                  "closed": false,
                  "debouncedSubscription": null,
                  "destination": Subscriber {
                    "_parent": null,
                    "_parentSubscription": null,
                    "_parents": null,
                    "_subscriptions": Array [
                      [Circular],
                    ],
                    "closed": false,
                    "destination": SafeSubscriber {
                      "_complete": undefined,
                      "_context": [Circular],
                      "_error": undefined,
                      "_next": [Function],
                      "_parent": null,
                      "_parentSubscriber": [Circular],
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": null,
                      "closed": false,
                      "destination": Object {
                        "closed": true,
                        "complete": [Function],
                        "error": [Function],
                        "next": [Function],
                      },
                      "isStopped": false,
                      "syncErrorThrowable": false,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "isStopped": false,
                    "syncErrorThrowable": true,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "dueTime": 500,
                  "hasValue": false,
                  "isStopped": false,
                  "lastValue": null,
                  "scheduler": AsyncScheduler {
                    "SchedulerAction": [Function],
                    "actions": Array [],
                    "active": false,
                    "now": [Function],
                    "scheduled": undefined,
                  },
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
              ],
              "thrownError": null,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "function",
        "props": Object {
          "item": Object {
            "artist": "Various",
            "category": "Jazz",
            "link": "http://profile-url.com",
            "name": "Some Album",
            "numberOfSongs": 14,
            "photo": "http://photo-url.com",
            "price": "$6.67",
            "releaseDate": 1902-03-01T23:00:00.000Z,
            "rights": "copyleft",
            "title": "Various - Some Album",
          },
          "iteration": 0,
          "position": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "function",
        "props": Object {
          "item": Object {
            "artist": "Artist Name",
            "category": "Rock",
            "link": "http://profile-url-1.com",
            "name": "Some Other Album",
            "numberOfSongs": 8,
            "photo": "http://photo-url-1.com",
            "price": "$13.13",
            "releaseDate": 1904-05-03T22:00:00.000Z,
            "rights": "copyleft rights",
            "title": "Artist Name - Some Other Album",
          },
          "iteration": 1,
          "position": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "function",
        "props": Object {
          "item": Object {
            "artist": "Lazy Artist Name",
            "category": "Pop",
            "link": "http://profile-url-2.com",
            "name": "Yet Another Album",
            "numberOfSongs": 11,
            "photo": "http://photo-url-2.com",
            "price": "$1.09",
            "releaseDate": 1908-09-07T22:00:00.000Z,
            "rights": "copyleft rights reversed",
            "title": "Lazy Artist Name - Yet Another Album",
          },
          "iteration": 2,
          "position": 2,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Route
            component={[Function]}
            path="/topTunes/:id"
          />,
          <div
            className="container"
          >
            <Quicksearch
              term$={
                Subject {
                  "_isScalar": false,
                  "closed": false,
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [
                    DebounceTimeSubscriber {
                      "_parent": Subscriber {
                        "_parent": null,
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": Array [
                          [Circular],
                        ],
                        "closed": false,
                        "destination": SafeSubscriber {
                          "_complete": undefined,
                          "_context": [Circular],
                          "_error": undefined,
                          "_next": [Function],
                          "_parent": null,
                          "_parentSubscriber": [Circular],
                          "_parentSubscription": null,
                          "_parents": null,
                          "_subscriptions": null,
                          "closed": false,
                          "destination": Object {
                            "closed": true,
                            "complete": [Function],
                            "error": [Function],
                            "next": [Function],
                          },
                          "isStopped": false,
                          "syncErrorThrowable": false,
                          "syncErrorThrown": false,
                          "syncErrorValue": null,
                        },
                        "isStopped": false,
                        "syncErrorThrowable": true,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        SubjectSubscription {
                          "_parent": [Circular],
                          "_parents": null,
                          "_subscriptions": null,
                          "closed": false,
                          "subject": [Circular],
                          "subscriber": [Circular],
                        },
                      ],
                      "closed": false,
                      "debouncedSubscription": null,
                      "destination": Subscriber {
                        "_parent": null,
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": Array [
                          [Circular],
                        ],
                        "closed": false,
                        "destination": SafeSubscriber {
                          "_complete": undefined,
                          "_context": [Circular],
                          "_error": undefined,
                          "_next": [Function],
                          "_parent": null,
                          "_parentSubscriber": [Circular],
                          "_parentSubscription": null,
                          "_parents": null,
                          "_subscriptions": null,
                          "closed": false,
                          "destination": Object {
                            "closed": true,
                            "complete": [Function],
                            "error": [Function],
                            "next": [Function],
                          },
                          "isStopped": false,
                          "syncErrorThrowable": false,
                          "syncErrorThrown": false,
                          "syncErrorValue": null,
                        },
                        "isStopped": false,
                        "syncErrorThrowable": true,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "dueTime": 500,
                      "hasValue": false,
                      "isStopped": false,
                      "lastValue": null,
                      "scheduler": AsyncScheduler {
                        "SchedulerAction": [Function],
                        "actions": Array [],
                        "active": false,
                        "now": [Function],
                        "scheduled": undefined,
                      },
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                  ],
                  "thrownError": null,
                }
              }
            />
          </div>,
          Array [
            <TopTunesListItem
              item={
                Object {
                  "artist": "Various",
                  "category": "Jazz",
                  "link": "http://profile-url.com",
                  "name": "Some Album",
                  "numberOfSongs": 14,
                  "photo": "http://photo-url.com",
                  "price": "$6.67",
                  "releaseDate": 1902-03-01T23:00:00.000Z,
                  "rights": "copyleft",
                  "title": "Various - Some Album",
                }
              }
              iteration={0}
              position={0}
            />,
            <TopTunesListItem
              item={
                Object {
                  "artist": "Artist Name",
                  "category": "Rock",
                  "link": "http://profile-url-1.com",
                  "name": "Some Other Album",
                  "numberOfSongs": 8,
                  "photo": "http://photo-url-1.com",
                  "price": "$13.13",
                  "releaseDate": 1904-05-03T22:00:00.000Z,
                  "rights": "copyleft rights",
                  "title": "Artist Name - Some Other Album",
                }
              }
              iteration={1}
              position={1}
            />,
            <TopTunesListItem
              item={
                Object {
                  "artist": "Lazy Artist Name",
                  "category": "Pop",
                  "link": "http://profile-url-2.com",
                  "name": "Yet Another Album",
                  "numberOfSongs": 11,
                  "photo": "http://photo-url-2.com",
                  "price": "$1.09",
                  "releaseDate": 1908-09-07T22:00:00.000Z,
                  "rights": "copyleft rights reversed",
                  "title": "Lazy Artist Name - Yet Another Album",
                }
              }
              iteration={2}
              position={2}
            />,
          ],
        ],
        "className": "container container--list",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/topTunes/:id",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Quicksearch
              term$={
                Subject {
                  "_isScalar": false,
                  "closed": false,
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [
                    DebounceTimeSubscriber {
                      "_parent": Subscriber {
                        "_parent": null,
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": Array [
                          [Circular],
                        ],
                        "closed": false,
                        "destination": SafeSubscriber {
                          "_complete": undefined,
                          "_context": [Circular],
                          "_error": undefined,
                          "_next": [Function],
                          "_parent": null,
                          "_parentSubscriber": [Circular],
                          "_parentSubscription": null,
                          "_parents": null,
                          "_subscriptions": null,
                          "closed": false,
                          "destination": Object {
                            "closed": true,
                            "complete": [Function],
                            "error": [Function],
                            "next": [Function],
                          },
                          "isStopped": false,
                          "syncErrorThrowable": false,
                          "syncErrorThrown": false,
                          "syncErrorValue": null,
                        },
                        "isStopped": false,
                        "syncErrorThrowable": true,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        SubjectSubscription {
                          "_parent": [Circular],
                          "_parents": null,
                          "_subscriptions": null,
                          "closed": false,
                          "subject": [Circular],
                          "subscriber": [Circular],
                        },
                      ],
                      "closed": false,
                      "debouncedSubscription": null,
                      "destination": Subscriber {
                        "_parent": null,
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": Array [
                          [Circular],
                        ],
                        "closed": false,
                        "destination": SafeSubscriber {
                          "_complete": undefined,
                          "_context": [Circular],
                          "_error": undefined,
                          "_next": [Function],
                          "_parent": null,
                          "_parentSubscriber": [Circular],
                          "_parentSubscription": null,
                          "_parents": null,
                          "_subscriptions": null,
                          "closed": false,
                          "destination": Object {
                            "closed": true,
                            "complete": [Function],
                            "error": [Function],
                            "next": [Function],
                          },
                          "isStopped": false,
                          "syncErrorThrowable": false,
                          "syncErrorThrown": false,
                          "syncErrorValue": null,
                        },
                        "isStopped": false,
                        "syncErrorThrowable": true,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "dueTime": 500,
                      "hasValue": false,
                      "isStopped": false,
                      "lastValue": null,
                      "scheduler": AsyncScheduler {
                        "SchedulerAction": [Function],
                        "actions": Array [],
                        "active": false,
                        "now": [Function],
                        "scheduled": undefined,
                      },
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                  ],
                  "thrownError": null,
                }
              }
            />,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "term$": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [
                  DebounceTimeSubscriber {
                    "_parent": Subscriber {
                      "_parent": null,
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        [Circular],
                      ],
                      "closed": false,
                      "destination": SafeSubscriber {
                        "_complete": undefined,
                        "_context": [Circular],
                        "_error": undefined,
                        "_next": [Function],
                        "_parent": null,
                        "_parentSubscriber": [Circular],
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "destination": Object {
                          "closed": true,
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "isStopped": false,
                        "syncErrorThrowable": false,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "isStopped": false,
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "_parentSubscription": null,
                    "_parents": null,
                    "_subscriptions": Array [
                      SubjectSubscription {
                        "_parent": [Circular],
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "subject": [Circular],
                        "subscriber": [Circular],
                      },
                    ],
                    "closed": false,
                    "debouncedSubscription": null,
                    "destination": Subscriber {
                      "_parent": null,
                      "_parentSubscription": null,
                      "_parents": null,
                      "_subscriptions": Array [
                        [Circular],
                      ],
                      "closed": false,
                      "destination": SafeSubscriber {
                        "_complete": undefined,
                        "_context": [Circular],
                        "_error": undefined,
                        "_next": [Function],
                        "_parent": null,
                        "_parentSubscriber": [Circular],
                        "_parentSubscription": null,
                        "_parents": null,
                        "_subscriptions": null,
                        "closed": false,
                        "destination": Object {
                          "closed": true,
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "isStopped": false,
                        "syncErrorThrowable": false,
                        "syncErrorThrown": false,
                        "syncErrorValue": null,
                      },
                      "isStopped": false,
                      "syncErrorThrowable": true,
                      "syncErrorThrown": false,
                      "syncErrorValue": null,
                    },
                    "dueTime": 500,
                    "hasValue": false,
                    "isStopped": false,
                    "lastValue": null,
                    "scheduler": AsyncScheduler {
                      "SchedulerAction": [Function],
                      "actions": Array [],
                      "active": false,
                      "now": [Function],
                      "scheduled": undefined,
                    },
                    "syncErrorThrowable": true,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                ],
                "thrownError": null,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "function",
          "props": Object {
            "item": Object {
              "artist": "Various",
              "category": "Jazz",
              "link": "http://profile-url.com",
              "name": "Some Album",
              "numberOfSongs": 14,
              "photo": "http://photo-url.com",
              "price": "$6.67",
              "releaseDate": 1902-03-01T23:00:00.000Z,
              "rights": "copyleft",
              "title": "Various - Some Album",
            },
            "iteration": 0,
            "position": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "function",
          "props": Object {
            "item": Object {
              "artist": "Artist Name",
              "category": "Rock",
              "link": "http://profile-url-1.com",
              "name": "Some Other Album",
              "numberOfSongs": 8,
              "photo": "http://photo-url-1.com",
              "price": "$13.13",
              "releaseDate": 1904-05-03T22:00:00.000Z,
              "rights": "copyleft rights",
              "title": "Artist Name - Some Other Album",
            },
            "iteration": 1,
            "position": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "function",
          "props": Object {
            "item": Object {
              "artist": "Lazy Artist Name",
              "category": "Pop",
              "link": "http://profile-url-2.com",
              "name": "Yet Another Album",
              "numberOfSongs": 11,
              "photo": "http://photo-url-2.com",
              "price": "$1.09",
              "releaseDate": 1908-09-07T22:00:00.000Z,
              "rights": "copyleft rights reversed",
              "title": "Lazy Artist Name - Yet Another Album",
            },
            "iteration": 2,
            "position": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
