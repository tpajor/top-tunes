// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TopTunesListItem component should match snapshot if no change was intended 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TopTunesListItem
    item={
      Object {
        "artist": "Various",
        "category": "Jazz",
        "link": "http://profile-url.com",
        "name": "Some Album",
        "numberOfSongs": 14,
        "photo": "http://photo-url.com",
        "price": "$6.67",
        "releaseDate": 1902-03-02T00:38:02.002Z,
        "rights": "copyleft",
        "title": "Various - Some Album",
      }
    }
    iteration={2}
    position={2}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <h5
        className="text text--list-item-title"
      >
        <span
          className="text text--list-item-title text--highlight"
        >
          3
        </span>
        Various - Some Album
      </h5>,
      "className": "link link--list-item-even",
      "replace": false,
      "to": "/topTunes/2",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="text text--list-item-title text--highlight"
          >
            3
          </span>,
          "Various - Some Album",
        ],
        "className": "text text--list-item-title",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 3,
            "className": "text text--list-item-title text--highlight",
          },
          "ref": null,
          "rendered": 3,
          "type": "span",
        },
        "Various - Some Album",
      ],
      "type": "h5",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <h5
          className="text text--list-item-title"
        >
          <span
            className="text text--list-item-title text--highlight"
          >
            3
          </span>
          Various - Some Album
        </h5>,
        "className": "link link--list-item-even",
        "replace": false,
        "to": "/topTunes/2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="text text--list-item-title text--highlight"
            >
              3
            </span>,
            "Various - Some Album",
          ],
          "className": "text text--list-item-title",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 3,
              "className": "text text--list-item-title text--highlight",
            },
            "ref": null,
            "rendered": 3,
            "type": "span",
          },
          "Various - Some Album",
        ],
        "type": "h5",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
